redis-ha:
  enabled: false

argo-cd:
  createAggregateRoles: true

  global:
    networkPolicy:
      create: true
      defaultDenyIngress: true

  repoServer:
    env:
      - name: HELM_PLUGINS
        value: /custom-tools/helm-plugins/
      - name: HELM_SECRETS_SOPS_PATH
        value: /custom-tools/sops
      - name: HELM_SECRETS_KUBECTL_PATH
        value: /custom-tools/kubectl
    volumes:
      - name: custom-tools
        emptyDir: { }
      - name: sops-key
        secret:
          secretName: sops-key

    volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
      - mountPath: /sops-key/
        name: sops-key

    initContainers:
      - name: download-tools
        image: alpine:latest
        command: [ sh, -ec ]
        env:
          - name: HELM_SECRETS_VERSION
            value: "3.11.0"
          - name: SOPS_VERSION
            value: "3.7.1"
          - name: KUBECTL_VERSION
            value: "1.22.0"
          - name: YQ_VERSION
            value: "4.18.1"
          - name: JQ_VERSION
            value: "1.6"
        args:
          - |
            mkdir -p /custom-tools/helm-plugins
            wget -qO- https://github.com/jkroepke/helm-secrets/releases/download/v${HELM_SECRETS_VERSION}/helm-secrets.tar.gz | tar -C /custom-tools/helm-plugins -xzf-;

            wget -qO /custom-tools/sops https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux
            wget -qO /custom-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
            
            wget https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64 -O /custom-tools/yq
            wget https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 -O /custom-tools/jq
            
            chmod +x /custom-tools/*
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools

  server:
    rbacConfig: 
      policy.default: role:admin
    
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts: ["argocd.yogstation.net"]
      tls:
        - hosts:
            - argocd.yogstation.net
          secretName: argocd-cert
    extraArgs:
      - "--insecure"

    config:
      url: https://argocd.yogstation.net/
      statusbadge.enabled: "true"
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: "6b8ff11daa4808355434"
              clientSecret: $argocd-secret:dex.github.secret
              orgs:
                - name: yogstation13-infrastructure
              loadAllGroups: true
              useLoginAsID: false
      admin.enabled: "false"
      configManagementPlugins: |
        - name: std-build
          init:
            command: ["/bin/sh", "-c"]
            args: ["i=0; for url in $(cat Chart.yaml | /custom-tools/yq '.dependencies' -o=json | /custom-tools/jq -r .[].repository); do i=$((i+1)); helm repo add repository${i} ${url}; done && helm dependency build"]
          generate:
            command: ["/bin/sh", "-c"]
            args: ["helm template --release-name $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE -f values.yaml -f secrets+age-import:///sops-key/key.txt?secrets.yaml . > kustomization/all.yaml && kustomize build"]